[
    {
        "id": "mqtt_broker_public",
        "type": "mqtt-broker",
        "name": "HiveMQ Public (Wokwi)",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "NodeRED_Bridge_Public",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true
    },
    {
        "id": "mqtt_broker_cloud",
        "type": "mqtt-broker",
        "name": "HiveMQ Cloud (Produ√ß√£o)",
        "broker": "fb72a7d252f04540981122bed00f24ae.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "tls_config",
        "clientid": "NodeRED_Bridge_Cloud",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "credentials": {
            "user": "iatron",
            "password": "Iatron2025"
        }
    },
    {
        "id": "tls_config",
        "type": "tls-config",
        "name": "HiveMQ TLS",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "fb72a7d252f04540981122bed00f24ae.s1.eu.hivemq.cloud",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "CardioIA - Monitoramento",
        "icon": "favorite",
        "order": 1
    },
    {
        "id": "group_vitals",
        "type": "ui_group",
        "name": "Sinais Vitais",
        "tab": "dashboard_tab",
        "order": 1,
        "width": "12"
    },
    {
        "id": "group_cardiac",
        "type": "ui_group",
        "name": "Batimentos Card√≠acos",
        "tab": "dashboard_tab",
        "order": 2,
        "width": "12"
    },
    {
        "id": "group_charts",
        "type": "ui_group",
        "name": "Hist√≥rico",
        "tab": "dashboard_tab",
        "order": 3,
        "width": "12"
    },
    {
        "id": "group_alerts",
        "type": "ui_group",
        "name": "Alertas",
        "tab": "dashboard_tab",
        "order": 4,
        "width": "12"
    },
    {
        "id": "group_system",
        "type": "ui_group",
        "name": "Sistema",
        "tab": "dashboard_tab",
        "order": 5,
        "width": "12"
    },
    {
        "id": "flow_main",
        "type": "tab",
        "label": "CardioIA - Dashboard Limpo"
    },
    {
        "id": "mqtt_in_data",
        "type": "mqtt in",
        "z": "flow_main",
        "name": "Subscribe Data",
        "topic": "cardioIA/vitals/data",
        "qos": "1",
        "datatype": "json",
        "broker": "mqtt_broker_public",
        "x": 120,
        "y": 100,
        "wires": [["bridge_to_cloud", "parse_data"]]
    },
    {
        "id": "mqtt_in_alert",
        "type": "mqtt in",
        "z": "flow_main",
        "name": "Subscribe Alerts",
        "topic": "cardioIA/vitals/alert",
        "qos": "1",
        "datatype": "json",
        "broker": "mqtt_broker_public",
        "x": 120,
        "y": 160,
        "wires": [["bridge_alert_cloud", "parse_alert"]]
    },
    {
        "id": "bridge_to_cloud",
        "type": "mqtt out",
        "z": "flow_main",
        "name": "Bridge ‚Üí Cloud",
        "topic": "cardioIA/vitals/data",
        "qos": "1",
        "retain": "false",
        "broker": "mqtt_broker_cloud",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "bridge_alert_cloud",
        "type": "mqtt out",
        "z": "flow_main",
        "name": "Alert ‚Üí Cloud",
        "topic": "cardioIA/vitals/alert",
        "qos": "1",
        "retain": "false",
        "broker": "mqtt_broker_cloud",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "parse_data",
        "type": "json",
        "z": "flow_main",
        "name": "Parse JSON",
        "property": "payload",
        "action": "obj",
        "x": 320,
        "y": 200,
        "wires": [["split_sensors", "count_messages"]]
    },
    {
        "id": "split_sensors",
        "type": "function",
        "z": "flow_main",
        "name": "Split Sensors",
        "func": "const data = msg.payload;\n\nreturn [\n    { payload: data.temperature, topic: 'temperature' },\n    { payload: data.humidity, topic: 'humidity' },\n    { payload: data.bpm, topic: 'bpm' },\n    { payload: data.movement, topic: 'movement' },\n    { payload: data.status, topic: 'status' },\n    { payload: new Date().toLocaleString('pt-BR'), topic: 'timestamp' }\n];",
        "outputs": 6,
        "noerr": 0,
        "x": 500,
        "y": 200,
        "wires": [
            ["gauge_temp", "chart_temp"],
            ["gauge_humidity"],
            ["gauge_bpm", "chart_bpm"],
            ["text_movement"],
            ["led_status"],
            ["text_last_update"]
        ]
    },
    {
        "id": "gauge_temp",
        "type": "ui_gauge",
        "z": "flow_main",
        "name": "Temperatura",
        "group": "group_vitals",
        "order": 1,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Temperatura",
        "label": "¬∞C",
        "format": "{{value | number:1}}",
        "min": "30",
        "max": "45",
        "colors": ["#0080ff", "#00b500", "#ff0000"],
        "seg1": "35",
        "seg2": "38",
        "x": 720,
        "y": 140,
        "wires": []
    },
    {
        "id": "gauge_humidity",
        "type": "ui_gauge",
        "z": "flow_main",
        "name": "Umidade",
        "group": "group_vitals",
        "order": 2,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "100",
        "colors": ["#ff9800", "#00b500", "#0080ff"],
        "seg1": "30",
        "seg2": "70",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "text_movement",
        "type": "ui_text",
        "z": "flow_main",
        "group": "group_vitals",
        "order": 3,
        "width": "4",
        "height": "2",
        "name": "Movimento",
        "label": "Movimento",
        "format": "{{msg.payload | number:2}} g",
        "layout": "col-center",
        "x": 720,
        "y": 220,
        "wires": []
    },
    {
        "id": "led_status",
        "type": "ui_led",
        "z": "flow_main",
        "order": 4,
        "group": "group_vitals",
        "width": "4",
        "height": "1",
        "label": "Status Dispositivo",
        "labelPlacement": "left",
        "colorForValue": [
            {
                "color": "#00ff00",
                "value": "online",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "offline",
                "valueType": "str"
            }
        ],
        "shape": "circle",
        "showGlow": true,
        "name": "Status LED",
        "x": 720,
        "y": 260,
        "wires": []
    },
    {
        "id": "text_last_update",
        "type": "ui_text",
        "z": "flow_main",
        "group": "group_vitals",
        "order": 5,
        "width": "12",
        "height": "1",
        "name": "√öltima Atualiza√ß√£o",
        "label": "√öltima atualiza√ß√£o:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "gauge_bpm",
        "type": "ui_gauge",
        "z": "flow_main",
        "name": "BPM Gauge",
        "group": "group_cardiac",
        "order": 1,
        "width": "6",
        "height": "5",
        "gtype": "donut",
        "title": "Batimentos Card√≠acos",
        "label": "BPM",
        "format": "{{value}}",
        "min": "40",
        "max": "150",
        "colors": ["#0080ff", "#00b500", "#ff0000"],
        "seg1": "60",
        "seg2": "100",
        "x": 720,
        "y": 360,
        "wires": []
    },
    {
        "id": "chart_bpm",
        "type": "ui_chart",
        "z": "flow_main",
        "name": "BPM Chart",
        "group": "group_cardiac",
        "order": 2,
        "width": "6",
        "height": "5",
        "label": "BPM (√∫ltimos 10 min)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados...",
        "dot": true,
        "ymin": "40",
        "ymax": "150",
        "removeOlder": "10",
        "removeOlderUnit": "60",
        "colors": ["#ff0000"],
        "x": 720,
        "y": 400,
        "wires": [[]]
    },
    {
        "id": "chart_temp",
        "type": "ui_chart",
        "z": "flow_main",
        "name": "Temp Chart",
        "group": "group_charts",
        "order": 1,
        "width": "12",
        "height": "5",
        "label": "Temperatura (√∫ltimos 10 min)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados...",
        "dot": false,
        "ymin": "30",
        "ymax": "45",
        "removeOlder": "10",
        "removeOlderUnit": "60",
        "colors": ["#1f77b4"],
        "x": 720,
        "y": 460,
        "wires": [[]]
    },
    {
        "id": "parse_alert",
        "type": "json",
        "z": "flow_main",
        "name": "Parse Alert",
        "property": "payload",
        "action": "obj",
        "x": 320,
        "y": 280,
        "wires": [["format_alert"]]
    },
    {
        "id": "format_alert",
        "type": "function",
        "z": "flow_main",
        "name": "Format Alert",
        "func": "const alert = msg.payload;\n\n// Determinar √≠cone e cor baseado na severidade\nlet icon = \"‚ö†Ô∏è\";\nlet color = \"orange\";\n\nif (alert.severity === \"critical\") {\n    icon = \"üö®\";\n    color = \"red\";\n} else if (alert.severity === \"warning\") {\n    icon = \"‚ö†Ô∏è\";\n    color = \"orange\";\n}\n\n// Mensagem simples para toast\nmsg.payload = `${icon} ${alert.message}`;\nmsg.topic = \"ALERTA\";\n\n// Mensagem formatada HTML para o texto\nmsg.formatted = `<div style=\"padding: 15px; border-left: 5px solid ${color}; background: rgba(255,255,255,0.05);\">\n    <h3 style=\"margin: 0 0 10px 0; color: ${color};\">${icon} ${alert.severity.toUpperCase()}</h3>\n    <p style=\"margin: 0; font-size: 16px; line-height: 1.5;\">${alert.message}</p>\n    <small style=\"color: #888; display: block; margin-top: 10px;\">${new Date().toLocaleString('pt-BR')}</small>\n</div>`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 280,
        "wires": [["toast_alert", "text_alert"]]
    },
    {
        "id": "toast_alert",
        "type": "ui_toast",
        "z": "flow_main",
        "position": "top right",
        "displayTime": "8",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Toast Alert",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "text_alert",
        "type": "ui_text",
        "z": "flow_main",
        "group": "group_alerts",
        "order": 1,
        "width": "12",
        "height": "3",
        "name": "Alert Display",
        "label": "",
        "format": "{{{msg.formatted}}}",
        "layout": "col-center",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "count_messages",
        "type": "function",
        "z": "flow_main",
        "name": "Count Messages",
        "func": "// Contador de mensagens\nlet count = flow.get('messageCount') || 0;\ncount++;\nflow.set('messageCount', count);\nflow.set('lastMessage', new Date().toLocaleString('pt-BR'));\n\nmsg.payload = {\n    total: count,\n    lastUpdate: new Date().toLocaleString('pt-BR'),\n    broker: 'Public ‚Üí Cloud Bridge',\n    status: 'üü¢ Conectado'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 380,
        "wires": [["text_message_count"]]
    },
    {
        "id": "text_message_count",
        "type": "ui_text",
        "z": "flow_main",
        "group": "group_system",
        "order": 1,
        "width": "6",
        "height": "3",
        "name": "Mensagens",
        "label": "üìä Mensagens Enviadas",
        "format": "<div style=\"text-align: center;\"><p style=\"font-size: 24px; margin: 5px 0;\">{{msg.payload.total}}</p><p style=\"font-size: 12px; color: #888;\">Total de mensagens</p><p style=\"font-size: 11px; color: #666;\">√öltima: {{msg.payload.lastUpdate}}</p><p style=\"font-size: 11px; color: #4CAF50;\">{{msg.payload.status}}</p></div>",
        "layout": "col-center",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "inject_status",
        "type": "inject",
        "z": "flow_main",
        "name": "Status Check",
        "props": [],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 120,
        "y": 420,
        "wires": [["check_cloud_status"]]
    },
    {
        "id": "check_cloud_status",
        "type": "function",
        "z": "flow_main",
        "name": "Cloud Status",
        "func": "const count = flow.get('messageCount') || 0;\nconst lastMsg = flow.get('lastMessage') || 'Nenhuma';\n\nmsg.payload = `<div style=\"text-align: center;\">\n    <h4 style=\"margin: 5px 0; color: #4CAF50;\">‚òÅÔ∏è HiveMQ Cloud</h4>\n    <p style=\"font-size: 12px; margin: 5px 0;\">üü¢ Conectado</p>\n    <p style=\"font-size: 11px; color: #666; margin: 5px 0;\">Broker: fb72a7d2...hivemq.cloud:8883</p>\n    <p style=\"font-size: 11px; color: #666; margin: 5px 0;\">üîí Seguran√ßa: TLS Ativo</p>\n    <p style=\"font-size: 11px; color: #666; margin: 5px 0;\">Mensagens: ${count}</p>\n    <p style=\"font-size: 10px; color: #888; margin: 5px 0;\">√öltima msg: ${lastMsg}</p>\n</div>`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 420,
        "wires": [["text_cloud_status"]]
    },
    {
        "id": "text_cloud_status",
        "type": "ui_text",
        "z": "flow_main",
        "group": "group_system",
        "order": 2,
        "width": "6",
        "height": "3",
        "name": "Status Cloud",
        "label": "",
        "format": "{{{msg.payload}}}",
        "layout": "col-center",
        "x": 520,
        "y": 420,
        "wires": []
    }
]
